<!DOCTYPE html>
<html lang="ens">
<head>
    <title>Express Partials and Tailwind Example</title>
    <link rel="stylesheet" href="/css/output.css"/>
</head>
<body>
<nav>
    <!-- Each link navigates to a path, but we’ll intercept it in JS -->
    <a href="/home" data-link>Home</a>
    <a href="/profile" data-link>Profile</a>
    <a href="/settings" data-link>Settings</a>
</nav>

<!-- Container where partial HTML is injected -->
<div id="content">
    <!-- Could show default "loading" or "home" content here if you like -->
</div>

<script>
    // Map each "route path" to the partial endpoint & a title
    const routes = {
        '/': {partial: '/partials/home', title: 'Home'},
        '/home': {partial: '/partials/home', title: 'Home'},
        '/profile': {partial: '/partials/profile', title: 'Profile'},
        '/settings': {partial: '/partials/settings', title: 'Settings'}
    };

    // Loads content for a given path
    async function loadRoute(path, pushState = false) {
        // If the path isn’t recognized, fall back to '/'
        if (!routes[path]) {
            path = '/';
        }

        try {
            const response = await fetch(routes[path].partial);
            const html = await response.text();

            // Inject partial into #content
            document.getElementById('content').innerHTML = html;

            // Update the document title
            document.title = routes[path].title;

            // Push state if we’re navigating by click (not on first load or popstate)
            if (pushState) {
                window.history.pushState({path}, '', path);
            }
        } catch (err) {
            console.error('Error loading route:', err);
        }
    }

    // Intercept clicks on links with data-link
    document.addEventListener('click', (e) => {
        const link = e.target.closest('a[data-link]');
        if (link) {
            e.preventDefault();
            const path = link.getAttribute('href');
            loadRoute(path, true);
        }
    });

    // Handle back/forward in the browser
    window.addEventListener('popstate', (e) => {
        const path = e.state?.path || window.location.pathname;
        loadRoute(path, false);
    });

    // On first load / page refresh, load the partial based on the current URL
    document.addEventListener('DOMContentLoaded', () => {
        loadRoute(window.location.pathname, false);
    });
</script>
</body>
</html>
