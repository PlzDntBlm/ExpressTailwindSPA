<div class="bg-white p-6 rounded shadow-md">
    <h2 class="text-2xl font-bold mb-4">Register New Account</h2>

    <div id="registerMessage" class="mb-4 text-sm"></div>

    <form id="registerForm" onsubmit="handleRegister(event)">
        <div class="mb-4">
            <label for="username" class="block text-gray-700 text-sm font-bold mb-2">Username:</label>
            <input type="text" id="username" name="username" required
                   class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
        </div>
        <div class="mb-6">
            <label for="password" class="block text-gray-700 text-sm font-bold mb-2">Password:</label>
            <input type="password" id="password" name="password" required
                   class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline">
        </div>
        <div class="flex items-center justify-between">
            <button type="submit"
                    class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                Register
            </button>
            <button type="button" onclick="loadPartial('/login', '/partials/login')"
                    class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800">
                Already have an account? Login
            </button>
        </div>
    </form>
</div>

<script>
    // Basic form submission handler (will be included when this partial is loaded)
    async function handleRegister(event) {
        event.preventDefault(); // Prevent default form submission
        const form = event.target;
        const formData = new FormData(form);
        const messageDiv = document.getElementById('registerMessage');
        messageDiv.textContent = 'Registering...';
        messageDiv.className = 'mb-4 text-sm text-gray-600'; // Reset style

        try {
            const response = await fetch('/auth/register', {
                method: 'POST',
                // Use URLSearchParams for application/x-www-form-urlencoded content type
                body: new URLSearchParams(formData)
            });

            const result = await response.json(); // Expect JSON response

            if (response.ok) {
                messageDiv.textContent = result.message || 'Registration successful! Please log in.';
                messageDiv.className = 'mb-4 text-sm text-green-600';
                form.reset();
                // Optionally redirect to login after a short delay
                setTimeout(() => loadPartial('/login', '/partials/login'), 1500);
            } else {
                messageDiv.textContent = result.message || `Registration failed: ${response.statusText}`;
                messageDiv.className = 'mb-4 text-sm text-red-600';
            }
        } catch (error) {
            console.error('Registration error:', error);
            messageDiv.textContent = 'An error occurred during registration.';
            messageDiv.className = 'mb-4 text-sm text-red-600';
        }
    }
</script>